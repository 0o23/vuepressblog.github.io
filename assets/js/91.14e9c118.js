(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{481:function(t,s,a){"use strict";a.r(s);var n=a(45),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_12-二进制求和-简单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-二进制求和-简单"}},[t._v("#")]),t._v(" 12. 二进制求和(简单)")]),t._v(" "),a("p",[a("strong",[t._v("题目描述：")])]),t._v(" "),a("p",[t._v("给你两个二进制字符串，返回它们的和（用二进制表示）。")]),t._v(" "),a("p",[t._v("输入为 非空 字符串且只包含数字 1 和 0。")]),t._v(" "),a("p",[a("strong",[t._v("示例1：")])]),t._v(" "),a("p",[t._v('输入: a = "11", b = "1"')]),t._v(" "),a("p",[t._v('输出: "100"')]),t._v(" "),a("p",[a("strong",[t._v("示例2：")])]),t._v(" "),a("p",[t._v('输入: a = "1010", b = "1011"')]),t._v(" "),a("p",[t._v('输出: "10101"')]),t._v(" "),a("p",[a("strong",[t._v("提示：")])]),t._v(" "),a("ul",[a("li",[t._v("每个字符串仅由字符 '0' 或 '1' 组成。")]),t._v(" "),a("li",[t._v("1 <= a.length, b.length <= 10^4")]),t._v(" "),a("li",[t._v('字符串如果不是 "0" ，就都不含前导零。')])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("答案：")])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} a\n * @param {string} b\n * @return {string}\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("addBinary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里是 0b(零和b，不是O)，0b 表示把 a 当成是二进制")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0b"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0b"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("blockquote",[a("p",[a("strong",[t._v("解释：")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/add-binary/solution/leetcode-67-mei-tian-yi-ge-bei-ju-xiao-ji-qiao-big/",target:"_blank",rel:"noopener noreferrer"}},[t._v("js / ts里的最大安全整数是2^53 - 1，超出这个范围的整数运算就不再准确（比如著名的2"),a("strong",[t._v("53 === 2")]),t._v("53 + 1）或无法表示了。为了解决这个问题，就有了BigInt提案  /   这个特性（指 BigInt）目前还没有稳定，兼容性只有70%多。但是主流浏览器已经兼容，而且也有polyfill，所以兼容性不是一个很大的问题。"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("本题可以用指针来写，但我一看指针就头疼，所以就不写了 =v=")]),t._v(" "),a("p",[t._v("今天再偷个懒=。=")])])])}),[],!1,null,null,null);s.default=r.exports}}]);