(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{472:function(s,a,t){"use strict";t.r(a);var n=t(45),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"_8-拥有最多糖果的孩子-简单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-拥有最多糖果的孩子-简单"}},[s._v("#")]),s._v(" 8. 拥有最多糖果的孩子(简单)")]),s._v(" "),t("p",[t("strong",[s._v("题目描述：")])]),s._v(" "),t("p",[s._v("给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。")]),s._v(" "),t("p",[s._v("对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。")]),s._v(" "),t("p",[t("strong",[s._v("示例1：")])]),s._v(" "),t("p",[s._v("输入：candies = [2,3,5,1,3], extraCandies = 3")]),s._v(" "),t("p",[s._v("输出：[true,true,true,false,true]")]),s._v(" "),t("p",[s._v("解释：")]),s._v(" "),t("p",[s._v("孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。")]),s._v(" "),t("p",[t("strong",[s._v("示例2：")])]),s._v(" "),t("p",[s._v("输入：candies = [4,2,1,1,2], extraCandies = 1")]),s._v(" "),t("p",[s._v("输出：[true,false,false,false,false]")]),s._v(" "),t("p",[s._v("解释：")]),s._v(" "),t("p",[s._v("只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。")]),s._v(" "),t("p",[t("strong",[s._v("示例3：")])]),s._v(" "),t("p",[s._v("输入：candies = [12,1,12], extraCandies = 10")]),s._v(" "),t("p",[s._v("输出：[true,false,true]")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("答案：")])])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("kidsWithCandies")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("candies"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" extraCandies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" max "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("candies"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" candies"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" item "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" extraCandies "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" max\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("blockquote",[t("p",[t("strong",[s._v("解释：")]),t("br"),s._v("\n题目还是很容易写出来，只是题干比较长罢了。")]),s._v(" "),t("p",[s._v("学到了两点：1. map方法返回的数组可以直接 return 出来；2. 可以把表达式当成一个 boolen 型的数据，直接 return 出去。(3. 扩展运算符真香 =v=)")])])])}),[],!1,null,null,null);a.default=e.exports}}]);