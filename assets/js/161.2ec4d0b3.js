(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{571:function(s,t,a){"use strict";a.r(t);var n=a(45),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"_2-二进制链表转整数-简单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-二进制链表转整数-简单"}},[s._v("#")]),s._v(" 2. 二进制链表转整数(简单)")]),s._v(" "),a("p",[a("strong",[s._v("题目描述：")])]),s._v(" "),a("p",[s._v("给你一个单链表的引用结点 head。链表中每个结点的值不是 0 就是 1。已知此链表是一个整数数字的二进制表示形式。")]),s._v(" "),a("p",[s._v("请你返回该链表所表示数字的 十进制值 。")]),s._v(" "),a("p",[a("strong",[s._v("示例1：")])]),s._v(" "),a("p",[s._v("输入：head = [1,0,1]")]),s._v(" "),a("p",[s._v("输出：5")]),s._v(" "),a("p",[s._v("解释：二进制数 (101) 转化为十进制数 (5)")]),s._v(" "),a("p",[a("strong",[s._v("示例2：")])]),s._v(" "),a("p",[s._v("输入：head = [0]")]),s._v(" "),a("p",[s._v("输出：0")]),s._v(" "),a("p",[a("strong",[s._v("示例3：")])]),s._v(" "),a("p",[s._v("输入：head = [1]")]),s._v(" "),a("p",[s._v("输出：1")]),s._v(" "),a("p",[a("strong",[s._v("示例4：")])]),s._v(" "),a("p",[s._v("输入：head = [1,0,0,1,0,0,1,1,1,0,0,0,0,0,0]")]),s._v(" "),a("p",[s._v("输出：18880")]),s._v(" "),a("p",[a("strong",[s._v("示例5：")])]),s._v(" "),a("p",[s._v("输入：head = [0,0]")]),s._v(" "),a("p",[s._v("输出：0")]),s._v(" "),a("p",[a("strong",[s._v("提示：")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("链表不为空。")])]),s._v(" "),a("li",[a("p",[s._v("链表的结点总数不超过 30。")])]),s._v(" "),a("li",[a("p",[s._v("每个结点的值不是 0 就是 1。")])])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("答案：")])])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @param {ListNode} head\n * @return {number}\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("getDecimalValue")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    head "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("解释：")])]),s._v(" "),a("p",[s._v("没啥好说的，挺简单的。唯一可能要注意的就是 while 循环的循环条件，可以直接写成 head。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);