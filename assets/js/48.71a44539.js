(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{438:function(t,a,s){"use strict";s.r(a);var n=s(45),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_2-最富有客户的资产总量-简单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-最富有客户的资产总量-简单"}},[t._v("#")]),t._v(" 2. 最富有客户的资产总量(简单)")]),t._v(" "),s("p",[s("strong",[t._v("题目描述：")]),t._v("\n给你一个 m x n 的整数网格 accounts ，其中 accounts[i][j] 是第 i​​​​​​​​​​​​ 位客户在第 j 家银行托管的资产数量。返回最富有客户所拥有的 资产总量 。客户的 资产总量 就是他们在各家银行托管的资产数量之和。最富有客户就是 资产总量 最大的客户。")]),t._v(" "),s("p",[s("strong",[t._v("示例1：")])]),t._v(" "),s("p",[t._v("输入：accounts = [[1,2,3],[3,2,1]]")]),t._v(" "),s("p",[t._v("输出：6")]),t._v(" "),s("p",[t._v("解释：\n第 1 位客户的资产总量 = 1 + 2 + 3 = 6")]),t._v(" "),s("p",[t._v("第 2 位客户的资产总量 = 3 + 2 + 1 = 6")]),t._v(" "),s("p",[t._v("两位客户都是最富有的，资产总量都是 6 ，所以返回 6 。")]),t._v(" "),s("p",[s("strong",[t._v("示例2：")])]),t._v(" "),s("p",[t._v("输入：accounts = [[1,5],[7,3],[3,5]]")]),t._v(" "),s("p",[t._v("输出：10")]),t._v(" "),s("p",[t._v("解释：\n第 1 位客户的资产总量 = 6")]),t._v(" "),s("p",[t._v("第 2 位客户的资产总量 = 10")]),t._v(" "),s("p",[t._v("第 3 位客户的资产总量 = 8")]),t._v(" "),s("p",[t._v("第 2 位客户是最富有的，资产总量是 10")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("答案：")])])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("maximumWealth")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("accounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("account")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("pre"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cur")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" pre"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("解释：")]),s("br"),t._v("\nreduce(callback,[initialValue])方法： 为数组中的每一个元素依次执行回调函数（不包括数组中被删除或从未被赋值的元素），返回一个具体的结果。\n其中，callback 是回调函数，initialValue 是第一次调用 callback 的第一个参数。详情去百度吧(=。=)。")]),t._v(" "),s("p",[t._v("扩展运算符(...)——可用作复制，合并，字符串转数组，函数传参。具体功能此处不展示。")]),t._v(" "),s("p",[t._v("这个函数写的很漂亮。希望这种代码我以后也可以信手拈来。XD")])])])}),[],!1,null,null,null);a.default=r.exports}}]);