(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{485:function(s,t,n){"use strict";n.r(t);var a=n(45),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"_14-只出现一次的数字-简单"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-只出现一次的数字-简单"}},[s._v("#")]),s._v(" 14. 只出现一次的数字(简单)")]),s._v(" "),n("p",[n("strong",[s._v("题目描述：")])]),s._v(" "),n("p",[s._v("给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。")]),s._v(" "),n("p",[n("strong",[s._v("说明：")])]),s._v(" "),n("p",[s._v("你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？")]),s._v(" "),n("p",[n("strong",[s._v("示例1：")])]),s._v(" "),n("p",[s._v("输入: [2,2,1]")]),s._v(" "),n("p",[s._v("输出: 1")]),s._v(" "),n("p",[n("strong",[s._v("示例2：")])]),s._v(" "),n("p",[s._v("输入: [4,1,2,1,2]")]),s._v(" "),n("p",[s._v("输出: 4")]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("答案：")])])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @param {number[]} nums\n * @return {number}\n */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("singleNumber")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("nums")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ans "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ans "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^=")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("blockquote",[n("p",[n("strong",[s._v("解释：")])]),s._v(" "),n("p",[s._v("力扣官方提供的"),n("a",{attrs:{href:"https://leetcode-cn.com/problems/single-number/solution/zhi-chu-xian-yi-ci-de-shu-zi-by-leetcode-solution/",target:"_blank",rel:"noopener noreferrer"}},[s._v("解法"),n("OutboundLink")],1),s._v("：")]),s._v(" "),n("p",[s._v("如果不考虑时间复杂度和空间复杂度的限制，这道题有很多种解法，可能的解法有如下几种。")]),s._v(" "),n("ol",[n("li",[n("strong",[s._v("使用集合存储数字")]),s._v("。遍历数组中的每个数字，如果集合中没有该数字，则将该数字加入集合，如果集合中已经有该数字，则将该数字从集合中删除，最后剩下的数字就是只出现一次的数字。")]),s._v(" "),n("li",[n("strong",[s._v("使用哈希表存储每个数字和该数字出现的次数")]),s._v("。遍历数组即可得到每个数字出现的次数，并更新哈希表，最后遍历哈希表，得到只出现一次的数字。")]),s._v(" "),n("li",[n("strong",[s._v("使用集合存储数组中出现的所有数字，并计算数组中的元素之和")]),s._v("。由于集合保证元素无重复，因此计算集合中的所有元素之和的两倍，即为每个元素出现两次的情况下的元素之和。由于数组中只有一个元素出现一次，其余元素都出现两次，因此"),n("strong",[s._v("用集合中的元素之和的两倍减去数组中的元素之和，剩下的数就是数组中只出现一次的数字。")])])]),s._v(" "),n("p",[s._v("上述三种解法都需要额外使用 O(n) 的空间，其中 n 是数组长度。\n"),n("br"),s._v(" "),n("br"),s._v("\n如何才能做到线性时间复杂度和常数空间复杂度呢？答案是使用位运算。对于这道题，可使用异或运算 ⊕。异或运算有以下三个性质。")]),s._v(" "),n("ol",[n("li",[s._v("任何数和 0 做异或运算，结果仍然是原来的数，即 "),n("strong",[s._v("a⊕0 = a")]),s._v("。")]),s._v(" "),n("li",[s._v("任何数和其自身做异或运算，结果是 0，即 "),n("strong",[s._v("a⊕a = 0")]),s._v("。")]),s._v(" "),n("li",[s._v("异或运算满足交换律和结合律，即 "),n("strong",[s._v("a ⊕ b ⊕ a = b ⊕ a ⊕ a = b ⊕ ( a ⊕ a ) = b ⊕ 0 = b")]),s._v("。")])]),s._v(" "),n("p",[s._v("由以上三个性质即可推得：将数组中的全部元素进行异或运算，则最终的结果就是数组中只出现一次的元素。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);